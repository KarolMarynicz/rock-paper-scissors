{"version":3,"sources":["resources/images/icon-rock.svg","resources/images/icon-paper.svg","resources/images/icon-scissors.svg","resources/images/icon-lizard.svg","resources/images/icon-spock.svg","resources/images/icon-close.svg","resources/images/bg-pentagon.svg","resources/images/logo-bonus.svg","resources/images/image-rules-bonus.svg","components/Toolbar/Toolbar.js","components/RulesButton/RulesButton.js","components/RulesWindow/RulesWindow.js","components/GameButton/GameButton.js","components/GameBoard/GameBoard.js","components/PlayAgainButton/PlayAgainButton.js","components/ResultBoard/ResultBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","className","src","Logo","alt","this","props","score","toString","React","Component","RulesButton","showModal","onClick","RulesWindow","showRules","setState","show","document","getElementById","style","backgroundColor","zIndex","hideRules","state","Close","Rules","GameButton","click","changeGameBoard","id","gameButtonStyle","backgroundImage","color","gameButtonCSS","innerRingCSS","imageCSS","isBig","source","GameBoard","Scissors","gameButtonClick","Spock","Paper","Lizard","Rock","PlayAgainButton","ResultBoard","player","image","computer","createButton","clickedElement","computerElement","resultText","playAgainClick","buttonID","object","App","addPoint","removePoint","setComputerChoice","choice","Math","floor","random","compare","playerChoice","localeCompare","computerChoice","result","userChoice","choices","defeats","i","length","changeBoardToResult","setTimeout","display","changeBoardToGame","rock","paper","scissors","lizard","spock","displayStylePick","displayStylePicked","Pentagon","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8608af7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lizard.7d2e0b18.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-spock.b6446e8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-pentagon.aced7052.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-bonus.f4c973f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules-bonus.f19a40fb.svg\";","import React from \"react\";\r\n\r\nimport './Toolbar.css'\r\nimport Logo from \"../../resources/images/logo-bonus.svg\"\r\n\r\nclass Toolbar extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"toolbar\">\r\n                <img className=\"logo-image\" src={Logo} alt=\"logo\" />\r\n                <div className=\"score-box\">\r\n                    <p className=\"score-text\">SCORE</p>\r\n                    <p className=\"score-number\">{this.props.score.toString()}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React from \"react\";\r\n\r\nimport \"./RulesButton.css\"\r\n\r\nclass RulesButton extends React.Component {\r\n\r\n    showModal = () => { this.props.showModal() };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rules-button\" onClick={this.showModal}>\r\n                 <p className=\"rules-button-text\">RULES</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RulesButton;","import React from \"react\";\r\n\r\nimport \"./RulesWindow.css\"\r\n\r\nimport \"../RulesButton/RulesButton\"\r\nimport Rules from \"../../resources/images/image-rules-bonus.svg\"\r\nimport Close from \"../../resources/images/icon-close.svg\"\r\n\r\nimport RulesButton from \"../RulesButton/RulesButton\";\r\n\r\nclass RulesWindow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          show: false\r\n        };\r\n    }\r\n\r\n    showRules = () => {\r\n        this.setState({ show: true });\r\n        document.getElementById(\"background\").style.backgroundColor = \"rgba(33,32,29,0.75)\";\r\n        document.getElementById(\"background\").style.zIndex = \"1\";\r\n    };\r\n    hideRules = () => {\r\n        this.setState({ show: false });\r\n        document.getElementById(\"background\").style.backgroundColor = \"transparent\";\r\n        document.getElementById(\"background\").style.zIndex = \"-1\";\r\n    };\r\n\r\n    render() {\r\n        if(!this.state.show) {\r\n            return (\r\n                <RulesButton showModal={this.showRules}/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <RulesButton  showModal={this.showRules}/>\r\n                <div className=\"modal\">\r\n                    <div className=\"title\">\r\n                        <p className=\"title-text\">RULES</p>\r\n                        <img className=\"close desktop\" src={Close} alt=\"close\" onClick={this.hideRules}/>\r\n                    </div>\r\n                    <img className=\"rules-image\" src={Rules} alt=\"rules\" />\r\n                    <img className=\"close mobile\" src={Close} alt=\"close\" onClick={this.hideRules}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RulesWindow;","import React from \"react\";\r\n\r\nimport './GameButton.css';\r\n\r\nclass GameButton extends React.Component {\r\n    render() {\r\n        const gameButtonStyle = {\r\n            backgroundImage: this.props.color\r\n        };\r\n        let gameButtonCSS = \"game-button\";\r\n        let innerRingCSS = \"inner-ring\";\r\n        let imageCSS = \"image\";\r\n\r\n        if(this.props.isBig === \"true\") {\r\n            gameButtonCSS += \" game-button-large\";\r\n            innerRingCSS += \" inner-ring-large\";\r\n            imageCSS += \" image-large\"\r\n        }\r\n\r\n        return(\r\n            <div className={gameButtonCSS} style={gameButtonStyle} onClick={this.click}>\r\n                <div className={innerRingCSS}>\r\n                    <img className={imageCSS} src={this.props.source} alt={this.props.alt}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    click = () => {\r\n        if(this.props.onClick !== \"false\")\r\n            this.props.changeGameBoard(this.props.id);\r\n    };\r\n}\r\n\r\nexport default GameButton;","import React from \"react\";\r\n\r\nimport GameButton from \"../GameButton/GameButton\";\r\n\r\nimport \"./GameBoard.css\";\r\n\r\nimport Rock from \"../../resources/images/icon-rock.svg\";\r\nimport Paper from \"../../resources/images/icon-paper.svg\";\r\nimport Scissors from \"../../resources/images/icon-scissors.svg\";\r\nimport Lizard from \"../../resources/images/icon-lizard.svg\";\r\nimport Spock from \"../../resources/images/icon-spock.svg\";\r\n\r\nclass GameBoard extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"game-board full-parent-width\">\r\n                <div className=\"one-item-line top-line flex-horizontal\">\r\n                    <GameButton\r\n                        id=\"scissors\"\r\n                        color=\"linear-gradient(to bottom, hsl(39, 89%, 49%), hsl(40, 84%, 53%))\"\r\n                        source={Scissors}\r\n                        alt=\"scissors\"\r\n                        changeGameBoard={this.props.gameButtonClick}/>\r\n                </div>\r\n                <div className=\"two-items-line flex-horizontal\">\r\n                    <div className=\"left-item\">\r\n                        <GameButton\r\n                            id=\"spock\"\r\n                            color=\"linear-gradient(to bottom, hsl(189, 59%, 53%), hsl(189, 58%, 57%))\"\r\n                            source={Spock}\r\n                            alt=\"spock\"\r\n                            changeGameBoard={this.props.gameButtonClick}/>\r\n                    </div>\r\n                    <div className=\"right-item\">\r\n                        <GameButton\r\n                            id=\"paper\"\r\n                            color=\"linear-gradient(to bottom, hsl(230, 89%, 62%), hsl(230, 89%, 65%))\"\r\n                            source={Paper}\r\n                            alt=\"paper\"\r\n                            changeGameBoard={this.props.gameButtonClick}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"two-items-line bottom-line flex-horizontal\">\r\n                    <GameButton\r\n                        id=\"lizard\"\r\n                        color=\"linear-gradient(to bottom, hsl(261, 73%, 60%), hsl(261, 72%, 63%))\"\r\n                        source={Lizard}\r\n                        alt=\"lizard\"\r\n                        changeGameBoard={this.props.gameButtonClick}/>\r\n                    <GameButton\r\n                        id=\"rock\"\r\n                        color=\"linear-gradient(to bottom, hsl(349, 71%, 52%), hsl(349, 70%, 56%))\"\r\n                        source={Rock}\r\n                        alt=\"rock\"\r\n                        changeGameBoard={this.props.gameButtonClick}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameBoard;","import React from \"react\";\r\n\r\nimport \"./PlayAgainButton.css\"\r\n\r\nclass PlayAgainButton extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"play-again-button\" onClick={this.props.onClick}>\r\n                <p className=\"text-button\">PLAY AGAIN</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayAgainButton;","import React from \"react\";\r\n\r\nimport \"./ResultBoard.css\";\r\n\r\nimport GameButton from \"../GameButton/GameButton\";\r\nimport PlayAgainButton from \"../PlayAgainButton/PlayAgainButton\";\r\n\r\nimport Rock from \"../../resources/images/icon-rock.svg\";\r\nimport Paper from \"../../resources/images/icon-paper.svg\";\r\nimport Scissors from \"../../resources/images/icon-scissors.svg\";\r\nimport Lizard from \"../../resources/images/icon-lizard.svg\";\r\nimport Spock from \"../../resources/images/icon-spock.svg\";\r\n\r\n\r\nclass ResultBoard extends React.Component {\r\n    player = {\r\n        image: \"\",\r\n        color: \"\"\r\n    };\r\n\r\n    computer = {\r\n        image: \"\",\r\n        color: \"\"\r\n    };\r\n\r\n    render() {\r\n        this.createButton(this.props.clickedElement, this.player);\r\n        this.createButton(this.props.computerElement, this.computer);\r\n\r\n        return (\r\n            <div id=\"result-box\" className=\"box\">\r\n                <div className=\"box box-column right-margin\">\r\n                    <p className=\"picked-text\">YOU PICKED</p>\r\n                    <GameButton\r\n                        color={this.player.color}\r\n                        source={this.player.image}\r\n                        alt=\"spock\"\r\n                        isBig=\"true\"\r\n                        onClick=\"false\" />\r\n                </div>\r\n                <div id=\"middle-element\" className=\"box box-column box-margin center-vert hidden\">\r\n                    <p className=\"result-text\">{this.props.resultText.toString()}</p>\r\n                    <PlayAgainButton  onClick={this.props.playAgainClick} />\r\n                </div>\r\n                <div id=\"middle-element-placeholder\" />\r\n                <div className=\"box box-column left-margin\">\r\n                    <p className=\"picked-text\">THE HOUSE PICKED</p>\r\n                    <div id=\"placeholder\" className=\"placeholder\"/>\r\n                    <div id=\"button-result\" className=\"hidden\">\r\n                        <GameButton\r\n                            color={this.computer.color}\r\n                            source={this.computer.image}\r\n                            alt=\"spock\"\r\n                            isBig=\"true\"\r\n                            onClick=\"false\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createButton(buttonID, object) {\r\n        switch (buttonID) {\r\n            case \"spock\":\r\n                object.image = Spock;\r\n                object.color = \"linear-gradient(to bottom, hsl(189, 59%, 53%), hsl(189, 58%, 57%))\";\r\n                break;\r\n            case \"lizard\":\r\n                object.image = Lizard;\r\n                object.color = \"linear-gradient(to bottom, hsl(261, 73%, 60%), hsl(261, 72%, 63%))\";\r\n                break;\r\n            case \"rock\":\r\n                object.image = Rock;\r\n                object.color = \"linear-gradient(to bottom, hsl(349, 71%, 52%), hsl(349, 70%, 56%))\";\r\n                break;\r\n            case \"paper\":\r\n                object.image = Paper;\r\n                object.color = \"linear-gradient(to bottom, hsl(230, 89%, 62%), hsl(230, 89%, 65%))\";\r\n                break;\r\n            case \"scissors\":\r\n                object.image = Scissors;\r\n                object.color = \"linear-gradient(to bottom, hsl(39, 89%, 49%), hsl(40, 84%, 53%))\";\r\n                break;\r\n            default:\r\n                object.image = null;\r\n                object.color = \"white\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default ResultBoard;","import React from 'react';\nimport './App.css';\n\nimport Pentagon from \"./resources/images/bg-pentagon.svg\"\n\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport RulesWindow from \"./components/RulesWindow/RulesWindow\";\nimport GameBoard from \"./components/GameBoard/GameBoard\";\nimport ResultBoard from \"./components/ResultBoard/ResultBoard\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: true,\n            score: 0,\n            result: \"TIE\",\n            playerChoice: \"scissors\",\n            computerChoice: \"scissors\"\n        };\n\n        this.choices = {\n            rock: {defeats: [\"scissors\", \"lizard\"]},\n            paper: {defeats: [\"rock\", \"spock\"]},\n            scissors: {defeats: [\"paper\", \"lizard\"]},\n            lizard: {defeats: [\"paper\", \"spock\"]},\n            spock: {defeats: [\"scissors\", \"rock\"]}\n        }\n    }\n\n    render() {\n        if(this.state.display) {\n            this.displayStylePick = \"flex\";\n            this.displayStylePicked = \"none\"\n        } else {\n            this.displayStylePick = \"none\";\n            this.displayStylePicked = \"flex\"\n        }\n\n        return (\n            <div>\n                <div id=\"background\" className=\"container bottom sm-middle full-screen\">\n                    <RulesWindow />\n                </div>\n                <section id=\"top\">\n                    <div className=\"container\">\n                        <Toolbar score={this.state.score}/>\n                    </div>\n                </section>\n                <section id=\"middle\">\n                    <div className=\"container height-400 height-270\" style={ {display: this.displayStylePick} }>\n                        <img className=\"pentagon-image height-400 height-270\" src={Pentagon} alt=\"pentagon\" />\n                        <GameBoard gameButtonClick={this.changeBoardToResult}/>\n                    </div>\n                    <div className=\"container\" style={ {display: this.displayStylePicked} }>\n                        <ResultBoard\n                            clickedElement={this.state.playerChoice}\n                            computerElement={this.state.computerChoice}\n                            playAgainClick={this.changeBoardToGame}\n                            resultText={this.state.result}/>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n\n    addPoint = () => {\n        this.setState({score:(this.state.score + 1)});\n    };\n\n    removePoint = () => {\n        this.setState({score:(this.state.score - 1)});\n    };\n\n    setComputerChoice = () => {\n        let choice = \"\";\n        let random = Math.floor(Math.random() * 5) + 1;\n\n        switch (random) {\n            case 1:\n                choice = \"spock\";\n                break;\n            case 2:\n                choice = \"lizard\";\n                break;\n            case 3:\n                choice = \"rock\";\n                break;\n            case 4:\n                choice = \"paper\";\n                break;\n            case 5:\n                choice = \"scissors\";\n                break;\n        }\n\n        return choice\n    };\n\n    compare = () => {\n        if(this.state.playerChoice.toString().localeCompare(this.state.computerChoice.toString()) === 0) {\n            this.setState({result:\"TIE\"});\n        } else {\n            let userChoice = this.choices[this.state.playerChoice].defeats;\n            for (let i = 0; i < userChoice.length; i++) {\n                if (userChoice[i].toString().localeCompare(this.state.computerChoice.toString()) === 0) {\n                    this.setState({result: \"YOU WIN\"});\n                    this.addPoint();\n                    return;\n                }\n            }\n            this.setState({result: \"YOU LOSE\"});\n            this.removePoint();\n        }\n    };\n\n    changeBoardToResult = (id) => {\n        this.state.playerChoice = id;\n        this.state.computerChoice = this.setComputerChoice();\n        this.compare();\n\n        setTimeout(function() {\n            document.getElementById(\"placeholder\").style.display = \"none\";\n            document.getElementById(\"middle-element-placeholder\").style.display = \"none\";\n            document.getElementById(\"button-result\").style.display = \"flex\";\n            document.getElementById(\"middle-element\").style.display = \"flex\";\n        }, 1000);\n\n        this.setState({display:false});\n    };\n\n    changeBoardToGame = () => {\n        document.getElementById(\"placeholder\").style.display = \"flex\";\n        document.getElementById(\"middle-element-placeholder\").style.display = \"flex\";\n        document.getElementById(\"button-result\").style.display = \"none\";\n        document.getElementById(\"middle-element\").style.display = \"none\";\n\n        this.setState({display:true});\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}